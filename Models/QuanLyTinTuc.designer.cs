#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _39_HoangVanHoan_Tuan08.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qlTin")]
	public partial class QuanLyTinTucDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTintuc(Tintuc instance);
    partial void UpdateTintuc(Tintuc instance);
    partial void DeleteTintuc(Tintuc instance);
    partial void InsertTheloaitin(Theloaitin instance);
    partial void UpdateTheloaitin(Theloaitin instance);
    partial void DeleteTheloaitin(Theloaitin instance);
    #endregion
		
		public QuanLyTinTucDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["qlTinConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTinTucDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTinTucDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTinTucDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTinTucDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tintuc> Tintucs
		{
			get
			{
				return this.GetTable<Tintuc>();
			}
		}
		
		public System.Data.Linq.Table<Theloaitin> Theloaitins
		{
			get
			{
				return this.GetTable<Theloaitin>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tintuc")]
	public partial class Tintuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTin;
		
		private System.Nullable<int> _idLoai;
		
		private string _Tieudetin;
		
		private string _Noidungtin;
		
		private EntityRef<Theloaitin> _Theloaitin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTinChanging(int value);
    partial void OnIDTinChanged();
    partial void OnidLoaiChanging(System.Nullable<int> value);
    partial void OnidLoaiChanged();
    partial void OnTieudetinChanging(string value);
    partial void OnTieudetinChanged();
    partial void OnNoidungtinChanging(string value);
    partial void OnNoidungtinChanged();
    #endregion
		
		public Tintuc()
		{
			this._Theloaitin = default(EntityRef<Theloaitin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTin", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTin
		{
			get
			{
				return this._IDTin;
			}
			set
			{
				if ((this._IDTin != value))
				{
					this.OnIDTinChanging(value);
					this.SendPropertyChanging();
					this._IDTin = value;
					this.SendPropertyChanged("IDTin");
					this.OnIDTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLoai", DbType="Int")]
		public System.Nullable<int> idLoai
		{
			get
			{
				return this._idLoai;
			}
			set
			{
				if ((this._idLoai != value))
				{
					if (this._Theloaitin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLoaiChanging(value);
					this.SendPropertyChanging();
					this._idLoai = value;
					this.SendPropertyChanged("idLoai");
					this.OnidLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tieudetin", DbType="NVarChar(MAX)")]
		public string Tieudetin
		{
			get
			{
				return this._Tieudetin;
			}
			set
			{
				if ((this._Tieudetin != value))
				{
					this.OnTieudetinChanging(value);
					this.SendPropertyChanging();
					this._Tieudetin = value;
					this.SendPropertyChanged("Tieudetin");
					this.OnTieudetinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Noidungtin", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Noidungtin
		{
			get
			{
				return this._Noidungtin;
			}
			set
			{
				if ((this._Noidungtin != value))
				{
					this.OnNoidungtinChanging(value);
					this.SendPropertyChanging();
					this._Noidungtin = value;
					this.SendPropertyChanged("Noidungtin");
					this.OnNoidungtinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theloaitin_Tintuc", Storage="_Theloaitin", ThisKey="idLoai", OtherKey="IDLoai", IsForeignKey=true)]
		public Theloaitin Theloaitin
		{
			get
			{
				return this._Theloaitin.Entity;
			}
			set
			{
				Theloaitin previousValue = this._Theloaitin.Entity;
				if (((previousValue != value) 
							|| (this._Theloaitin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Theloaitin.Entity = null;
						previousValue.Tintucs.Remove(this);
					}
					this._Theloaitin.Entity = value;
					if ((value != null))
					{
						value.Tintucs.Add(this);
						this._idLoai = value.IDLoai;
					}
					else
					{
						this._idLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("Theloaitin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Theloaitin")]
	public partial class Theloaitin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLoai;
		
		private string _Tentheloai;
		
		private EntitySet<Tintuc> _Tintucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLoaiChanging(int value);
    partial void OnIDLoaiChanged();
    partial void OnTentheloaiChanging(string value);
    partial void OnTentheloaiChanged();
    #endregion
		
		public Theloaitin()
		{
			this._Tintucs = new EntitySet<Tintuc>(new Action<Tintuc>(this.attach_Tintucs), new Action<Tintuc>(this.detach_Tintucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLoai
		{
			get
			{
				return this._IDLoai;
			}
			set
			{
				if ((this._IDLoai != value))
				{
					this.OnIDLoaiChanging(value);
					this.SendPropertyChanging();
					this._IDLoai = value;
					this.SendPropertyChanged("IDLoai");
					this.OnIDLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tentheloai", DbType="NVarChar(MAX)")]
		public string Tentheloai
		{
			get
			{
				return this._Tentheloai;
			}
			set
			{
				if ((this._Tentheloai != value))
				{
					this.OnTentheloaiChanging(value);
					this.SendPropertyChanging();
					this._Tentheloai = value;
					this.SendPropertyChanged("Tentheloai");
					this.OnTentheloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theloaitin_Tintuc", Storage="_Tintucs", ThisKey="IDLoai", OtherKey="idLoai")]
		public EntitySet<Tintuc> Tintucs
		{
			get
			{
				return this._Tintucs;
			}
			set
			{
				this._Tintucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tintucs(Tintuc entity)
		{
			this.SendPropertyChanging();
			entity.Theloaitin = this;
		}
		
		private void detach_Tintucs(Tintuc entity)
		{
			this.SendPropertyChanging();
			entity.Theloaitin = null;
		}
	}
}
#pragma warning restore 1591
